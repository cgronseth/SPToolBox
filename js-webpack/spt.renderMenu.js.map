{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/components/spt.menu.tsx","webpack:///./src/sharepoint/spt.sharepoint.entities.ts","webpack:///./src/sharepoint/spt.sharepoint.rest.ts","webpack:///./src/sharepoint/spt.sharepoint.ts","webpack:///./src/spt.constants.ts","webpack:///./src/spt.dates.ts","webpack:///./src/spt.logax.ts","webpack:///./src/spt.renderMenu.tsx","webpack:///./src/spt.strings.ts","webpack:///external \"React\"","webpack:///external \"ReactDOM\""],"names":[],"mappings":"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","file":"./spt.renderMenu.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/spt.renderMenu.tsx\");\n","import * as React from \"react\";\r\nimport { Constants } from \"../spt.constants\"\r\nimport { LogAx } from \"../spt.logax\";\r\nimport { SPRest, RestQueryType } from \"../sharepoint/spt.sharepoint.rest\";\r\nimport { Strings } from \"../spt.strings\";\r\n\r\nexport interface IMenuState {\r\n    analizando: boolean;\r\n    conectado: boolean;\r\n    sharepointData: any;\r\n}\r\nexport class Menu extends React.Component<{}, IMenuState> {\r\n    constructor(props: Readonly<{}>) {\r\n        super(props);\r\n        this.state = {\r\n            analizando: false,\r\n            conectado: false,\r\n            sharepointData: null\r\n        };\r\n        this.clickExplorador = this.clickExplorador.bind(this);\r\n        this.clickDirectory = this.clickDirectory.bind(this);\r\n    }\r\n\r\n    private currentUrl: string;\r\n    private isCancelled: boolean;\r\n\r\n    render() {\r\n        return <div id=\"SPT.Menu\">\r\n            <div>\r\n                {\r\n                    this.state.analizando &&\r\n                    <div>\r\n                        <img src=\"icons/ajax-loader.gif\" width=\"12px\" /> {Constants.getLiteral(\"menuAnalizandoSitio\")}\r\n                    </div>\r\n                }\r\n                {\r\n                    !this.state.analizando && this.state.conectado &&\r\n                    <div>\r\n                        <div className='SPTMenuDiagnosticsConnected'>{Constants.getLiteral(\"menuConectado\")}</div>\r\n                        <div className='SPTMenuDiagnosticsDetail'>&middot;&nbsp;{Constants.getLiteral(\"menuTitulo\")}: {this.state.sharepointData[\"Title\"]}</div>\r\n                        <div className='SPTMenuDiagnosticsDetail'>&middot;&nbsp;{Constants.getLiteral(\"menuVersion\")}: {this.state.sharepointData[\"UIVersion\"]}</div>\r\n                        <div className='SPTMenuDiagnosticsDetail'>&middot;&nbsp;{Constants.getLiteral(\"menuLCID\")}: {this.state.sharepointData[\"Language\"]}</div>\r\n                    </div>\r\n                }\r\n                {\r\n                    !this.state.analizando && !this.state.conectado &&\r\n                    <div>\r\n                        {Constants.getLiteral(\"menuNoSharePoint\")}\r\n                    </div>\r\n                }\r\n            </div>\r\n            {\r\n                this.state.conectado &&\r\n                <div>\r\n                    <hr />\r\n                    <div className=\"SPTMenuItem\" onClick={this.clickExplorador}>{Constants.getLiteral(\"menuExplorador\")}</div>\r\n                    <div className=\"SPTMenuItem\" onClick={this.clickDirectory}>{Constants.getLiteral(\"menuDirectory\")}</div>\r\n                </div>\r\n            }\r\n            <hr />\r\n            <div className=\"SPTMenuFooter\">SharePoint Toolbox V{browser.runtime.getManifest().version}</div>\r\n        </div>;\r\n    }\r\n\r\n    public componentDidUpdate(prevProps: any, prevState: any) {\r\n        if (prevState.analizando != this.state.analizando) {\r\n            let qry = SPRest.queryWebInfo(this.currentUrl);\r\n            LogAx.trace(\"Query:\" + qry);\r\n\r\n            SPRest.restQuery(qry, RestQueryType.ODataJSON, 0).then((result: any) => {\r\n                if (this.isCancelled) return;\r\n                try {\r\n                    this.setState({\r\n                        sharepointData: result,\r\n                        analizando: false,\r\n                        conectado: true\r\n                    });\r\n                } catch (e) {\r\n                    this.setState({\r\n                        sharepointData: null,\r\n                        analizando: false,\r\n                        conectado: false\r\n                    });\r\n                }\r\n            }, (e) => {\r\n                // Error mostly because this is not a SHP Site (or no permission)\r\n                if (this.isCancelled) return;\r\n                this.setState({\r\n                    sharepointData: null,\r\n                    analizando: false,\r\n                    conectado: false\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    public componentDidMount(): void {\r\n        //Launch extension menú. Detects current tab to obtain possible SHP site\r\n        browser.tabs.query({ active: true, windowId: browser.windows.WINDOW_ID_CURRENT })\r\n            .then(tabs => browser.tabs.get(tabs[0].id))\r\n            .then(tab => {\r\n                console.info(tab);\r\n                this.currentUrl = Strings.getWebUrlFromAbsolute(tab.url);\r\n                this.setState({\r\n                    analizando: true\r\n                });\r\n            });\r\n    }\r\n\r\n    public componentWillUnmount(): void {\r\n        this.isCancelled = true;\r\n    }\r\n\r\n    private clickExplorador(e: React.MouseEvent<HTMLDivElement, MouseEvent>): void {\r\n        let createData: any = {\r\n            type: \"panel\",\r\n            titlePreface: \"SharePoint Toolbox - \",\r\n            url: \"spt.explorer.html?u=\" + encodeURIComponent(this.currentUrl)\r\n                + \"&i=\" + encodeURIComponent(this.state.sharepointData[\"Id\"])\r\n                + \"&t=\" + encodeURIComponent(this.state.sharepointData[\"Title\"])\r\n                + \"&v=\" + encodeURIComponent(this.state.sharepointData[\"menuVersion\"])\r\n                + \"&l=\" + encodeURIComponent(this.state.sharepointData[\"menuLCID\"])\r\n        };\r\n        browser.windows.create(createData)\r\n            .then((window) => {\r\n                console.log(\"Panel \" + window.id + \" 'SPT.Explorer' created\");\r\n            });\r\n\r\n        e.preventDefault();\r\n    }\r\n\r\n    private clickDirectory(e: React.MouseEvent<HTMLDivElement, MouseEvent>): void {\r\n        let createData: any = {\r\n            type: \"panel\",\r\n            titlePreface: \"SharePoint Toolbox - \",\r\n            url: \"spt.directory.html?u=\" + encodeURIComponent(this.currentUrl)\r\n                + \"&i=\" + encodeURIComponent(this.state.sharepointData[\"Id\"])\r\n                + \"&t=\" + encodeURIComponent(this.state.sharepointData[\"Title\"])\r\n                + \"&v=\" + encodeURIComponent(this.state.sharepointData[\"menuVersion\"])\r\n                + \"&l=\" + encodeURIComponent(this.state.sharepointData[\"menuLCID\"])\r\n        };\r\n        browser.windows.create(createData)\r\n            .then((window) => {\r\n                console.log(\"Panel \" + window.id + \" 'SPT.Directory' created\");\r\n            });\r\n\r\n        e.preventDefault();\r\n    }\r\n}\r\n","import { number } from \"prop-types\";\r\n\r\nexport class SPSecurableObject {\r\n    HasUniqueRoleAssignments?: boolean;\r\n    RoleAssignments?: string[];\r\n};\r\n\r\nexport class SPData {\r\n    constructor(internalName: string, value: string, type: number) {\r\n        this.InternalName = internalName;\r\n        this.StringValue = value;\r\n        this.Type = type;\r\n    }\r\n    InternalName: string;\r\n    LookupId?: number;\r\n    StringValue: string;\r\n    Type: number;\r\n}\r\n\r\nexport class SPItem extends SPSecurableObject {\r\n    ID: number;\r\n    Items: SPData[] = [];\r\n    public getItem(internalName: string): SPData {\r\n        for (let i = 0; i < this.Items.length; i++) {\r\n            let element: SPData = this.Items[i];\r\n            if (element.InternalName === internalName) {\r\n                return element;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n}\r\n\r\nexport class SPField {\r\n    ID: string; //GUID\r\n    InternalName: string;\r\n    StaticName: string;\r\n    Title: string;\r\n    Description: string;\r\n    Type: number; //https://docs.microsoft.com/en-us/previous-versions/office/sharepoint-server/ms428806%28v%3doffice.15%29\r\n    Required: boolean;\r\n    Hidden: boolean;\r\n    //Lookup fields (Type=7)\r\n    LookupField?: string;\r\n}\r\n\r\nexport class SPAttachment {\r\n    LeafName: string;\r\n    FileName: string;\r\n    Data: ArrayBuffer;\r\n}\r\n\r\nexport class SPFolder {\r\n    UniqueId: string;\r\n    Name: string;\r\n    ParentFolder?: SPFolder;\r\n    ServerRelativeUrl?: string;\r\n    ItemCount?: number;\r\n    // Not SharePoint API members\r\n    Level?: number;                 //Helps calculate folder level\r\n    Expand: boolean;                //Control view of items in folder\r\n}\r\n\r\nexport class SPListItem extends SPItem {\r\n    Name?: string;\r\n    SPFileSystemObjectType: number;\r\n    Attachments?: SPAttachment[];\r\n    Folder?: SPFolder;\r\n    Created: Date;\r\n    Author: SPUser;\r\n    Modified: Date;\r\n    Editor: SPUser;\r\n    Length: number = 0;\r\n    // Not SharePoint API members\r\n    Hidden: Boolean;                //Hide item\r\n    Checked: number = 0;            //Checked state: 0:Not checked, 1:Checked, -1:Partial checked (not all related items checked)\r\n}\r\n\r\nexport class SPList extends SPSecurableObject {\r\n    ID: string;\r\n    Title?: string;\r\n    InternalName?: string;\r\n    ListItemEntityTypeFullName?: string;\r\n    ItemCount?: number;\r\n    Items?: SPListItem[];\r\n    Fields?: SPField[];\r\n    Hidden?: boolean;\r\n    RootFolder?: SPFolder;\r\n}\r\n\r\nexport class SPView {\r\n    ID: string;\r\n    Title: string;\r\n    DefaultView: boolean;\r\n    PersonalView: boolean;\r\n    RowLimit: number;\r\n    ServerRelativeUrl: string;\r\n    ViewFields: SPField[];\r\n}\r\n\r\nexport class SPGroup {\r\n    ID: number;\r\n    Name: string;\r\n    PrincipalType: number;\r\n}\r\n\r\nexport class SPWeb extends SPSecurableObject {\r\n    ID: string; //GUID\r\n    Url: string;\r\n    ServerRelativeUrl: string;\r\n    Name: string;\r\n    Description?: string;\r\n    ParentWeb?: SPWeb;\r\n    Groups?: SPGroup[];\r\n    Webs?: SPWeb[];\r\n    Lists?: SPList[];\r\n    Created?: Date;\r\n}\r\n\r\nexport class SPSite {\r\n    ID: string; //GUID\r\n    Url: string;\r\n}\r\n\r\nexport class SPUser {\r\n    constructor(displayName: string, email: string) {\r\n        this.DisplayName = displayName;\r\n        this.Email = email;\r\n    }\r\n    Id?: number\r\n    DisplayName: string;\r\n    Email: string;\r\n    IsSiteAdmin?: boolean;\r\n    Groups?: SPGroup[];\r\n}\r\n\r\nexport enum PermissionKind {\r\n    emptyMask = 0,\r\n    viewListItems = 1,\r\n    addListItems = 2,\r\n    editListItems = 3,\r\n    deleteListItems = 4,\r\n    approveItems = 5,\r\n    openItems = 6,\r\n    viewVersions = 7,\r\n    deleteVersions = 8,\r\n    cancelCheckout = 9,\r\n    managePersonalViews = 10,\r\n    manageLists = 12\r\n    // Add or remove from SP.PermissionKind in sp.debug.js\r\n}","import { LogAx } from \"../spt.logax\";\r\nimport { SPView, SPData } from \"./spt.sharepoint.entities\";\r\nimport { Strings } from \"../spt.strings\";\r\nimport { SP } from \"./spt.sharepoint\";\r\n\r\nexport enum RestQueryType {\r\n    ODataJSON,\r\n    ArrayBuffer\r\n}\r\n\r\nexport class SPRest {\r\n    /**\r\n    * Lanza consulta REST y devuelve los resultados en un Promise\r\n    * @param qry Consulta completa: HTTPS://<servidor>/_api/ProjectServer/Projects('2c7d134c- [...]\r\n    * @param reintentos Número de reintentos de 6s. Por defecto 10\r\n    */\r\n    public static restQuery(qry: string, type: RestQueryType, reintentos?: number): Promise<any> {\r\n        let tiempoReintento: number = 30000;\r\n        if (reintentos === undefined) {\r\n            reintentos = 10;\r\n        }\r\n\r\n        return new Promise<any>((resolve, reject) => {\r\n            let xhr: XMLHttpRequest = new XMLHttpRequest();\r\n            xhr.open('GET', qry, true);\r\n            if (type === RestQueryType.ODataJSON) {\r\n                xhr.setRequestHeader(\"Accept\", \"application/json;odata=nometadata\");\r\n            } else if (type == RestQueryType.ArrayBuffer) {\r\n                xhr.responseType = \"arraybuffer\";\r\n            }\r\n\r\n            xhr.onreadystatechange = () => {\r\n                if (xhr.readyState === 4) {\r\n\r\n                    //Debug. Random error. Descomentar para habilitar:\r\n                    /*\r\n                    let debugError: boolean = (Math.random() < 0.3); //30% error\r\n                    */\r\n\r\n                    if (/*!debugError &&*/ type === RestQueryType.ODataJSON && xhr.status === 200 && xhr.getResponseHeader('content-type').startsWith('application/json')) {\r\n                        let result = JSON.parse(xhr.responseText);\r\n\r\n                        let coolOffDelay = setTimeout(() => {\r\n                            clearTimeout(coolOffDelay);\r\n                            resolve(result);\r\n                        }, Math.floor(Math.random() * 100) + 50)\r\n\r\n                    } else if (type === RestQueryType.ArrayBuffer && xhr.status === 200 && xhr.getResponseHeader('content-type') === \"application/octet-stream\") {\r\n                        resolve(xhr.response);\r\n                    } else if (xhr.status === 401 || xhr.status === 403) {\r\n                        reject('RESTQuery - Unauthorized/Forbidden');\r\n                    } else {\r\n                        LogAx.trace('RESTQuery - Status==' + xhr.status.toString() + ': ' + xhr.responseText);\r\n                        tiempoReintento = Math.floor(Math.random() * 1000) + tiempoReintento;\r\n\r\n                        // Adapt query if field fails\r\n                        if (xhr.status === 400) {\r\n                            // Example responseText --> {\\\"odata.error\\\":{\\\"code\\\":\\\"-1, Microsoft.SharePoint.SPException\\\",\\\"message\\\":{\\\"lang\\\":\\\"en-US\\\",\\\"value\\\":\\\"The field or property 'AppAuthor' does not exist.\\\"}}}\"\r\n                            let matches = xhr.responseText.match(/property '(.*)' does not exist/);\r\n                            if (matches.length === 2) {\r\n                                // Erase field in query, be it a simple field or in a expand pair --> [\",Author/Title\", \",Author/EMail\", \"Author,\"]\r\n                                let rgx = new RegExp('(,' + matches[1] + '\\/[a-zA-Z_0-9]+)|(' + matches[1] + ',)|(,' + matches[1] + ')', 'g');\r\n                                qry = qry.replace(rgx, \"\");\r\n\r\n                                // Not a connection problem, so restore retries and send off immediatly\r\n                                tiempoReintento = 100;\r\n                                reintentos++;\r\n                                LogAx.trace(\"RESTQuery - Reintento eliminando el campo problemático '\" + matches[1] + \"'. Query:\" + qry);\r\n                            }\r\n                        }\r\n\r\n                        // Recursive retry\r\n                        if (reintentos && --reintentos >= 0) {\r\n                            LogAx.trace('RESTQuery - Reintentos restantes: ' + reintentos.toString());\r\n\r\n                            let retryDelay = setTimeout(() => {\r\n                                clearTimeout(retryDelay);\r\n                                SPRest.restQuery(qry, type, reintentos).then((recResult) => {\r\n                                    resolve(recResult);\r\n                                }, (e) => {\r\n                                    reject(e);\r\n                                })\r\n                            }, tiempoReintento);\r\n\r\n                        } else {\r\n                            reject('RESTQuery - Reintentos agotados');\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n            xhr.onerror = () => {\r\n                reject('RESTQuery - OnError: ' + xhr.responseText);\r\n            };\r\n            xhr.send();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Sends POST request\r\n     * @param qry \r\n     * @param requestDigestValue \r\n     * @param newFolder \r\n     * @param isDelete \r\n     * @param fileData \r\n     * @param listItemEntity \r\n     * @param itemData \r\n     */\r\n    public static restPost(qry: string, requestDigestValue?: string, newFolder?: string, isDelete?: boolean, fileData?: ArrayBuffer, listItemEntity?: string, itemData?: SPData[]): Promise<any> {\r\n        return new Promise<any>((resolve, reject) => {\r\n            let jsonBody: any = null;\r\n            let spRequest = new XMLHttpRequest();\r\n            spRequest.open('POST', qry, true);\r\n            //cabeceras indicados en https://pwmather.wordpress.com/2018/05/21/using-rest-in-javascript-to-update-projectonline-project-custom-fields-ppm-pmot-jquery-office365/\r\n\r\n            spRequest.setRequestHeader(\"Accept\", \"application/json;odata=verbose\");\r\n            if (requestDigestValue) {\r\n                spRequest.setRequestHeader(\"X-RequestDigest\", requestDigestValue);\r\n            }\r\n            if (!fileData) {\r\n                spRequest.setRequestHeader(\"If-Match\", \"*\");\r\n            }\r\n            if (newFolder) {\r\n                jsonBody = JSON.stringify({ '__metadata': { 'type': 'SP.Folder' }, 'ServerRelativeUrl': newFolder });\r\n                spRequest.setRequestHeader(\"content-type\", \"application/json;odata=verbose\");\r\n            }\r\n            if (isDelete) {\r\n                spRequest.setRequestHeader(\"X-HTTP-Method\", \"DELETE\");\r\n            }\r\n            if (itemData && listItemEntity) {\r\n                let body: any = { '__metadata': { 'type': listItemEntity } };\r\n                for (let spd of itemData) {\r\n                    let internalName: string = spd.InternalName;\r\n                    if (spd.Type === 7) {   //Lookup\r\n                        internalName += \"Id\";\r\n                    }\r\n                    body[internalName] = SP.assignPostValue(spd);\r\n                }\r\n                jsonBody = JSON.stringify(body);\r\n                spRequest.setRequestHeader(\"content-type\", \"application/json;odata=verbose\");\r\n            }\r\n\r\n            spRequest.onreadystatechange = () => {\r\n                if (spRequest.readyState === 4) {\r\n                    if (spRequest.status >= 200 && spRequest.status < 300) {\r\n                        if (spRequest.responseText !== '') {\r\n                            resolve(JSON.parse(spRequest.responseText));\r\n                        } else if (spRequest.statusText.toLowerCase() === \"ok\") {\r\n                            resolve({});\r\n                        } else {\r\n                            reject(\"RestPost - Status: \" + spRequest.status + \", StatusText: \" + spRequest.statusText);\r\n                        }\r\n                    } else {\r\n                        reject('RestPost - Status==' + spRequest.status.toString() + ': ' + spRequest.responseText);\r\n                    }\r\n                }\r\n            };\r\n            spRequest.onerror = () => {\r\n                reject('Resultados: restPost - Error: ' + spRequest.responseText);\r\n            };\r\n\r\n            if (fileData) {\r\n                spRequest.send(fileData);\r\n            } else if (jsonBody) {\r\n                spRequest.send(jsonBody);\r\n            } else {\r\n                spRequest.send();\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Sets up POST request for adding Files\r\n     * @param url \r\n     * @param qry \r\n     * @param data \r\n     */\r\n    public static restPostAddFile(url: string, qry: string, data: ArrayBuffer): Promise<any> {\r\n        return new Promise<any>((resolve, reject) => {\r\n            this.requestDigestValue(url).then((requestDigestValue) => {\r\n                this.restPost(qry, requestDigestValue, null, false, data).then((postResult) => {\r\n                    resolve(postResult);\r\n                }, (e) => {\r\n                    reject(e);\r\n                });\r\n            }, (e) => {\r\n                reject(e);\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Sets up POST request for adding Folders\r\n     * @param url \r\n     * @param qry \r\n     * @param serverRelativefolder \r\n     */\r\n    public static restPostAddFolder(url: string, qry: string, serverRelativefolder: string): Promise<any> {\r\n        return new Promise<any>((resolve, reject) => {\r\n            this.requestDigestValue(url).then((requestDigestValue) => {\r\n                this.restPost(qry, requestDigestValue, serverRelativefolder, false).then((postResult) => {\r\n                    resolve(postResult);\r\n                }, (e) => {\r\n                    reject(e);\r\n                });\r\n            }, (e) => {\r\n                reject(e);\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Sets up POST request for deleting files or folders\r\n     * @param url \r\n     * @param qry \r\n     * @param data \r\n     */\r\n    public static restPostDelete(url: string, qry: string, data?: ArrayBuffer): Promise<any> {\r\n        return new Promise<any>((resolve, reject) => {\r\n            this.requestDigestValue(url).then((requestDigestValue) => {\r\n                this.restPost(qry, requestDigestValue, null, true, data).then((postResult) => {\r\n                    resolve(postResult);\r\n                }, (e) => {\r\n                    reject(e);\r\n                });\r\n            }, (e) => {\r\n                reject(e);\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Sets up POST request for deleting items\r\n     * @param url \r\n     * @param qry \r\n     * @param data \r\n     */\r\n    public static restPostDeleteItem(url: string, qry: string): Promise<any> {\r\n        return new Promise<any>((resolve, reject) => {\r\n            this.requestDigestValue(url).then((requestDigestValue) => {\r\n                this.restPost(qry, requestDigestValue, null, true).then((postResult) => {\r\n                    resolve(postResult);\r\n                }, (e) => {\r\n                    reject(e);\r\n                });\r\n            }, (e) => {\r\n                reject(e);\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Sets up POST request for adding Files\r\n     * @param url \r\n     * @param qry \r\n     * @param data \r\n     */\r\n    public static restPostAddItem(url: string, qry: string, listItemEntity: string, data: SPData[]): Promise<any> {\r\n        return new Promise<any>((resolve, reject) => {\r\n            this.requestDigestValue(url).then((requestDigestValue) => {\r\n                this.restPost(qry, requestDigestValue, null, false, null, listItemEntity, data).then((postResult) => {\r\n                    resolve(postResult);\r\n                }, (e) => {\r\n                    reject(e);\r\n                });\r\n            }, (e) => {\r\n                reject(e);\r\n            });\r\n        });\r\n    }\r\n\r\n    /* No utiliza de momento\r\n    public static restPut(qry: string, data?: string): Promise<any> {\r\n        return new Promise<void>((resolve, reject) => {\r\n            var spRequest = new XMLHttpRequest();\r\n            spRequest.open('PUT', qry, true);\r\n            spRequest.setRequestHeader(\"Accept\", \"application/json\");\r\n            spRequest.onreadystatechange = () => {\r\n                if (spRequest.readyState === 4 && spRequest.status === 200) {\r\n                    var result = JSON.parse(spRequest.responseText);\r\n                    resolve(result);\r\n                } else if (spRequest.readyState === 4 && spRequest.status !== 200) {\r\n                    LogAx.trace('Resultados: restPut - Status==' + spRequest.status.toString() + ': ' + spRequest.responseText);\r\n                    reject();\r\n                }\r\n            };\r\n            spRequest.onerror = () => {\r\n                LogAx.trace('Resultados: restPut - Error: ' + spRequest.responseText);\r\n                reject();\r\n            };\r\n            if (data) {\r\n                spRequest.send(JSON.stringify(data));\r\n            } else {\r\n                spRequest.send();\r\n            }\r\n        });\r\n    }*/\r\n\r\n    /**\r\n     * DigestValue cache: avoid sending a request if already available and not expired\r\n     */\r\n    private static cacheRequestDigest: string = null;\r\n    private static cacheRequestDigestExpire: number = null;\r\n\r\n    /**\r\n     * Read digest value necessary for POST and PUT updates\r\n     * Since this code reads from outside a SharePoint site, a request is necessary\r\n     * Apps in a SharePoint page can read this value directly from \"__REQUESTDIGEST\" input element\r\n     * @param url \r\n     */\r\n    public static requestDigestValue(url: string): Promise<string> {\r\n        return new Promise<string>((resolve, reject) => {\r\n            if (this.cacheRequestDigest && this.cacheRequestDigestExpire > new Date().getTime()) {\r\n                resolve(this.cacheRequestDigest);\r\n            }\r\n            let qry: string = SPRest.queryDigestValue(url);\r\n            this.restPost(qry).then((resultadoJSON) => {\r\n                let ctxWebInfo: any = resultadoJSON.d.GetContextWebInformation;\r\n                let expireSeconds: number = +ctxWebInfo.FormDigestTimeoutSeconds;   // 1800 seconds could be the limiting factor for most big uploads, before 2GB size limit. Just hope it doesn't expire in middle of operation\r\n                this.cacheRequestDigest = ctxWebInfo.FormDigestValue;\r\n                this.cacheRequestDigestExpire = new Date().setSeconds(expireSeconds - 60); // save in cache the expiration date (less a minute just in case)\r\n                resolve(this.cacheRequestDigest);\r\n            }, (e) => {\r\n                reject(\"RequestDigestValue read Error: \" + e);\r\n            });\r\n        });\r\n    }\r\n\r\n    /* Querys GET */\r\n    public static queryWebInfo(url: string): string {\r\n        return Strings.safeURL(url) + \"_api/Web?$Select=Id,Title,UIVersion,Language\";\r\n    }\r\n\r\n    public static querySiteInfo(url: string): string {\r\n        return Strings.safeURL(url) + \"_api/Site?$Select=Id,Url\";\r\n    }\r\n\r\n    public static queryLists(url: string, baseType: number, showHidden: boolean): string {\r\n        let qry: string = Strings.safeURL(url) + \"_api/Web/Lists\";\r\n        //Select fields\r\n        qry += \"?$Select=Id,Title,Description,Hidden,EntityTypeName,ItemCount,Created,LastItemModifiedDate\";\r\n        //Where\r\n        qry += \"&$filter=BaseType eq \" + baseType.toString() + \" and Hidden eq \" + (showHidden ? \"true\" : \"false\");\r\n        //Order\r\n        return qry + \"&$OrderBy=Title asc\";\r\n    }\r\n\r\n    public static queryListsLight(url: string): string {\r\n        return Strings.safeURL(url) + \"_api/Web/Lists?$Select=Id,Title,ItemCount,HasUniqueRoleAssignments&$filter=Hidden eq false\";\r\n    }\r\n\r\n    public static queryList(url: string, id: string): string {\r\n        let qry: string = Strings.safeURL(url) + \"_api/Web/Lists(guid'\" + id + \"')\";\r\n        //Select fields\r\n        qry += \"?$Select=Id,Title,Description,Hidden,EntityTypeName,ItemCount,Created,LastItemModifiedDate,EntityTypeName,ListItemEntityTypeFullName,RootFolder/Name,RootFolder/UniqueID,RootFolder/ItemCount,RootFolder/ServerRelativeUrl\";\r\n        qry += \"&$Expand=RootFolder\"\r\n        return qry;\r\n    }\r\n\r\n    public static queryListFields(url: string, idList: string): string {\r\n        let qry: string = Strings.safeURL(url) + \"_api/Web/Lists(guid'\" + idList + \"')/Fields\";\r\n        //Select fields\r\n        qry += \"?$Select=Id,Title,InternalName,StaticName,Description,Hidden,Required,FieldTypeKind,LookupField\";\r\n        //Where\r\n        qry += \"&$filter=Hidden eq false\";\r\n        return qry;\r\n    }\r\n\r\n    public static queryLibraryItemsWithView(url: string, idList: string, view: SPView): string {\r\n        let expands: string[] = [\"Author\", \"Editor\", \"Folder\", \"Folder/ParentFolder\", \"File\"];\r\n        let fixedFields: string[] = [\"Id\", \"ID\", \"EncodedAbsUrl\", \"FileRef\", \"FileLeafRef\", \"Folder\", \"File\", \"Author\", \"Created\", \"Editor\", \"Modified\"];\r\n        let qry: string = Strings.safeURL(url) + \"_api/Web/Lists(guid'\" + idList + \"')/Items\";\r\n\r\n        //Select fields. Long queries get cut off, so use wildcard selector for normal columns      \r\n        if (view.ViewFields.length > 32) {\r\n            qry += \"?$Select=*,Author/Title,Author/EMail,Editor/Title,Editor/EMail,Folder/Name,Folder/UniqueId,Folder/ItemCount,Folder/ServerRelativeUrl,Folder/ParentFolder/UniqueId,File/Length\";\r\n        } else {\r\n            qry += \"?$Select=Id,EncodedAbsUrl,FileRef,FileLeafRef,Created,Modified,Author/Title,Author/EMail,Editor/Title,Editor/EMail,Folder/Name,Folder/UniqueId,Folder/ItemCount,Folder/ServerRelativeUrl,Folder/ParentFolder/UniqueId,File/Length\";\r\n        }\r\n\r\n        for (let field of view.ViewFields) {\r\n            if (fixedFields.indexOf(field.InternalName) !== -1)\r\n                continue;\r\n\r\n            let odataInternalName: string = SP.safeOdataField(field.InternalName);\r\n\r\n            switch (field.Type) {\r\n                case 7: //Lookup\r\n                    qry += \",\" + odataInternalName + \"/\" + SP.safeOdataField(field.LookupField);\r\n                    expands.push(odataInternalName);\r\n                    break;\r\n                case 20: //User\r\n                    qry += \",\" + odataInternalName + \"/Title,\" + odataInternalName + \"/EMail\";\r\n                    expands.push(odataInternalName);\r\n                    break;\r\n                default:\r\n                    if (view.ViewFields.length <= 32) { // not necessary with wildcard\r\n                        qry += \",\" + odataInternalName;\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n        //Select - Expand\r\n        if (expands.length) {\r\n            qry += \"&$Expand=\" + expands.join(\",\");\r\n        }\r\n        //Limit\r\n        qry += \"&$Top=\" + ((view.RowLimit) ? view.RowLimit : 500);\r\n        return qry\r\n    }\r\n\r\n    public static queryListItems(url: string, idList: string, rowLimit?: number): string {\r\n        let qry: string = Strings.safeURL(url) + \"_api/Web/Lists(guid'\" + idList + \"')/Items\";\r\n        //Select fields\r\n        qry += \"?$Select=*,EncodedAbsUrl,FileRef,FileLeafRef,Author/Title,Author/EMail,Editor/Title,Editor/EMail\";\r\n        //Select - Expand\r\n        qry += \"&$Expand=Author,Editor\";\r\n        //Limit\r\n        qry += \"&$Top=\" + ((rowLimit) ? rowLimit : 100);\r\n        return qry\r\n    }\r\n\r\n    public static queryListItemsLight(url: string, idList: string): string {\r\n        let qry: string = Strings.safeURL(url) + \"_api/Web/Lists(guid'\" + idList + \"')/Items\";\r\n        //Select fields\r\n        qry += \"?$Select=Id,FileRef,HasUniqueRoleAssignments\";\r\n        //Limit\r\n        qry += \"&$Top=2000\";\r\n        return qry\r\n    }\r\n\r\n    public static queryListItemsWithView(url: string, idList: string, view: SPView): string {\r\n        let expands: string[] = [\"Author\", \"Editor\"];\r\n        let fixedFields: string[] = [\"Id\", \"ID\", \"Title\", \"Author\", \"Created\", \"Editor\", \"Modified\"];\r\n        let qry: string = Strings.safeURL(url) + \"_api/Web/Lists(guid'\" + idList + \"')/Items\";\r\n\r\n        //Select fields. Long queries get cut off, so use wildcard selector for normal columns      \r\n        if (view.ViewFields.length > 32) {\r\n            qry += \"?$Select=*,Author/Title,Author/EMail,Editor/Title,Editor/EMail\";\r\n        } else {\r\n            qry += \"?$Select=Id,Title,Author/Title,Author/EMail,Editor/Title,Editor/EMail,Created,Modified\";\r\n        }\r\n\r\n        for (let field of view.ViewFields) {\r\n            if (fixedFields.indexOf(field.InternalName) !== -1)\r\n                continue;\r\n\r\n            let odataInternalName: string = field.InternalName.startsWith(\"_x\") ? \"OData_\" + field.InternalName : field.InternalName;\r\n\r\n            switch (field.Type) {\r\n                case 7: //Lookup\r\n                    let odataLookupField: string = field.LookupField.startsWith(\"_x\") ? \"OData_\" + field.LookupField : field.LookupField;\r\n                    qry += \",\" + odataInternalName + \"/\" + odataLookupField + \",\" + odataInternalName + \"/ID\";\r\n                    expands.push(odataInternalName);\r\n                    break;\r\n                case 20: //User\r\n                    qry += \",\" + odataInternalName + \"/Title,\" + odataInternalName + \"/EMail\";\r\n                    expands.push(odataInternalName);\r\n                    break;\r\n                default:\r\n                    if (view.ViewFields.length <= 32) { // not necessary with wildcard\r\n                        qry += \",\" + odataInternalName;\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n        //Select - Expand\r\n        if (expands.length) {\r\n            qry += \"&$Expand=\" + expands.join(\",\");\r\n        }\r\n        //Limit\r\n        qry += \"&$Top=\" + ((view.RowLimit) ? view.RowLimit : 100);\r\n        return qry\r\n    }\r\n\r\n    public static queryFileData(url: string, idList: string, idItem: number): string {\r\n        return Strings.safeURL(url) + \"_api/Web/Lists(guid'\" + idList + \"')/Items(\" + idItem + \")/File/$value\";\r\n    }\r\n\r\n    public static queryWebs(url: string) {\r\n        let qry: string = Strings.safeURL(url) + \"_api/Web/Webs\";\r\n        //Select fields\r\n        qry += \"?$Select=Id,Title,Url,ServerRelativeUrl\";\r\n        //Order\r\n        return qry + \"&$OrderBy=Title asc\";\r\n    }\r\n\r\n    public static queryWeb(url: string) {\r\n        let qry: string = Strings.safeURL(url) + \"_api/Web\";\r\n        //Select fields\r\n        qry += \"?$Select=Id,Title,Description,Url,ServerRelativeUrl,Created\";\r\n        //Order\r\n        return qry;\r\n    }\r\n\r\n    public static queryDigestValue(url: string) {\r\n        return Strings.safeURL(url) + \"_api/contextinfo\";\r\n    }\r\n\r\n    public static queryFolder(url: string, path: string) {\r\n        return Strings.safeURL(url) + \"_api/Web/GetFolderByServerRelativeUrl('\" + path + \"')/Folders?$Select=Name\";\r\n    }\r\n\r\n    public static queryViews(url: string, idList: string): string {\r\n        let qry: string = Strings.safeURL(url) + \"_api/Web/Lists(guid'\" + idList + \"')/Views\";\r\n        //Select fields\r\n        qry += \"?$Select=Id,Title,DefaultView,Paged,PersonalView,RowLimit,ServerRelativeUrl,ViewFields/Items\";\r\n        //Expando to other api methods\r\n        qry += \"&$Expand=ViewFields\"\r\n        //Filter\r\n        qry += \"&$filter=Hidden eq false\";\r\n        return qry;\r\n    }\r\n\r\n    public static querySiteUsers(url: string): string {\r\n        return Strings.safeURL(url) + \"_api/web/SiteUsers?$Select=Id,Title,Email,IsSiteAdmin,UserPrincipalName\";\r\n    }\r\n\r\n    public static querySiteGroupsUsers(url: string): string {\r\n        return Strings.safeURL(url) + \"_api/Web/SiteGroups?$Select=Id,Title,PrincipalType,Users/Id,Users/Title,Users/Email,Users/IsSiteAdmin&$Expand=Users\";\r\n    }\r\n\r\n    public static queryWebPermissions(url: string): string {\r\n        return Strings.safeURL(url) + \"_api/Web/RoleAssignments?$Select=PrincipalId,RoleDefinitionBindings/BasePermissions&$Expand=RoleDefinitionBindings\";\r\n    }\r\n\r\n    public static queryWebPermissionsForUser(url: string, idUser: number): string {\r\n        return Strings.safeURL(url) + \"_api/Web/RoleAssignments/GetByPrincipalId(\" + idUser + \")/RoleDefinitionBindings?$Select=BasePermissions\";\r\n    }\r\n\r\n    public static queryListPermissionsForUser(url: string, listId: string, idUser: number): string {\r\n        return Strings.safeURL(url) + \"_api/Web/Lists(guid'\" + listId + \"')/RoleAssignments/GetByPrincipalId(\" + idUser + \")/RoleDefinitionBindings?$Select=BasePermissions\";\r\n    }\r\n\r\n    public static queryItemPermissionsForUser(url: string, listId: string, itemId: number, idUser: number): string {\r\n        return Strings.safeURL(url) + \"_api/Web/Lists(guid'\" + listId + \"')/Items(\" + itemId + \")/RoleAssignments/GetByPrincipalId(\" + idUser + \")/RoleDefinitionBindings?$Select=BasePermissions\";\r\n    }\r\n\r\n    public static queryPermissionsList(url: string, listId: string): string {\r\n        return Strings.safeURL(url) + \"_api/Web/Lists(guid'\" + listId + \"')/EffectiveBasePermissions\";\r\n    }\r\n\r\n\r\n    /* Querys POST */\r\n    public static queryPostFolders(url: string) {\r\n        return Strings.safeURL(url) + \"_api/web/folders\"\r\n    }\r\n\r\n    public static queryPostAddFile(url: string, path: string, name: string) {\r\n        return Strings.safeURL(url) + \"_api/Web/GetFolderByServerRelativeUrl('\" + path + \"')/Files/Add(overwrite=true, url='\" + name + \"')\";\r\n    }\r\n\r\n    public static queryPostDeleteFolder(url: string, pathAndName: string, recycle: boolean) {\r\n        let qry: string = Strings.safeURL(url) + \"_api/Web/GetFolderByServerRelativeUrl('\" + pathAndName + \"')\";\r\n        if (recycle) {\r\n            qry += \"/Recycle()\";\r\n        }\r\n        return qry;\r\n    }\r\n\r\n    public static queryPostDeleteFile(url: string, pathAndName: string, recycle: boolean) {\r\n        let qry: string = Strings.safeURL(url) + \"_api/Web/GetFileByServerRelativeUrl('\" + pathAndName + \"')\";\r\n        if (recycle) {\r\n            qry += \"/Recycle()\";\r\n        }\r\n        return qry;\r\n    }\r\n\r\n    public static queryPostDeleteItem(url: string, idList: string, idItem: number) {\r\n        return Strings.safeURL(url) + \"_api/Web/Lists(guid'\" + idList + \"')/items(\" + idItem.toString() + \")\";\r\n    }\r\n\r\n    public static queryPostAddItem(url: string, idList: string) {\r\n        return Strings.safeURL(url) + \"_api/Web/Lists(guid'\" + idList + \"')/items\";\r\n    }\r\n\r\n\r\n}\r\n","import { SPField, SPListItem, SPFolder, SPData, PermissionKind } from \"./spt.sharepoint.entities\";\r\nimport { LogAx } from \"../spt.logax\";\r\nimport { Constants } from \"../spt.constants\";\r\n\r\nexport interface FileData {\r\n    FileName: string;\r\n    FileData: ArrayBuffer;\r\n    FileLength: number;\r\n}\r\n\r\nexport class SP {\r\n    // Order SPListItem array by their fields. Sorting fields are passed in \"fields\" array.\r\n    // If a field ends with a dot (.) it orders Descending. Otherwise Ascending\r\n    public static orderLibraryDataByFields(data: SPListItem[], fields: string[]): SPListItem[] {\r\n        if (fields && fields.length && data && data.length) {\r\n            data.sort((a, b) => {\r\n                return SP.orderLibraryDataByFieldsRecursive(a, b, fields, 0);\r\n            });\r\n        }\r\n        return data;\r\n    }\r\n    private static orderLibraryDataByFieldsRecursive(a: SPListItem, b: SPListItem, fields: string[], idx: number): number {\r\n        if (fields.length == idx || idx > 5)\r\n            return 0;\r\n\r\n        let field: string = fields[idx];\r\n        let direction: number = 1; //1=ASC, -1=DESC\r\n        if (field.endsWith('.')) {\r\n            field = field.slice(0, -1);\r\n            direction = -1;\r\n        }\r\n\r\n        //Obtain sortable data from field. Data must include value and type.\r\n        let objA: SPData;\r\n        let objB: SPData;\r\n        switch (field) {\r\n            case \"ID\":\r\n                objA = new SPData(field, a.ID.toString(), 5);\r\n                objB = new SPData(field, b.ID.toString(), 5);\r\n                break;\r\n            case \"Author\":\r\n                objA = new SPData(field, a.Author.DisplayName, 255);\r\n                objB = new SPData(field, b.Author.DisplayName, 255);\r\n                break;\r\n            case \"Editor\":\r\n                objA = new SPData(field, a.Editor.DisplayName, 255);\r\n                objB = new SPData(field, b.Editor.DisplayName, 255);\r\n                break;\r\n            case \"Created\":\r\n                objA = new SPData(field, a.Created.toISOString(), 4);\r\n                objB = new SPData(field, b.Created.toISOString(), 4);\r\n                break;\r\n            case \"Modified\":\r\n                objA = new SPData(field, a.Modified.toISOString(), 4);\r\n                objB = new SPData(field, b.Modified.toISOString(), 4);\r\n                break;\r\n            case \"Folder\":\r\n                // Los ítems normales no tiene Folder, pero sí ParentFolder. \r\n                // Agregar carácter | a los ítems normales para que ordene siempre debajo de su carpeta padre.\r\n                if (a.Folder.Name) {\r\n                    objA = new SPData(field, a.Folder.ServerRelativeUrl, 255);\r\n                } else {\r\n                    objA = new SPData(field, a.Folder.ParentFolder.ServerRelativeUrl + \"|\", 255);\r\n                }\r\n                if (b.Folder.Name) {\r\n                    objB = new SPData(field, b.Folder.ServerRelativeUrl, 255);\r\n                } else {\r\n                    objB = new SPData(field, b.Folder.ParentFolder.ServerRelativeUrl + \"|\", 255);\r\n                }\r\n                break;\r\n            default:\r\n                objA = a.getItem(field);\r\n                objB = b.getItem(field);\r\n                break;\r\n        }\r\n\r\n        // Apply sorting algorithm depending on data type. Direction reverses result.\r\n        switch (objA.Type) {\r\n            case 1: //Integer\r\n            case 5: //Counter\r\n            case 9: //NumberField\r\n                let na: number = +objA.StringValue;\r\n                let nb: number = +objB.StringValue;\r\n                if (na < nb)\r\n                    return -1 * direction;\r\n                if (na > nb)\r\n                    return 1 * direction;\r\n                break;\r\n            case 4: //Date\r\n                let da: Date = new Date(objA.StringValue);\r\n                let db: Date = new Date(objB.StringValue);\r\n                if (da < db)\r\n                    return -1 * direction;\r\n                if (da > db)\r\n                    return 1 * direction;\r\n                break;\r\n            case 8: //Boolean\r\n                let ba: boolean = objA.StringValue.toLowerCase() === \"true\";\r\n                let bb: boolean = objB.StringValue.toLowerCase() === \"true\";\r\n                if (!ba && nb)\r\n                    return -1 * direction;\r\n                if (ba && !bb)\r\n                    return 1 * direction;\r\n                break;\r\n            case 14://GUID\r\n                if (objA.StringValue.toLowerCase() < objB.StringValue.toLowerCase())\r\n                    return -1 * direction;\r\n                if (objA.StringValue.toLowerCase() > objB.StringValue.toLowerCase())\r\n                    return 1 * direction;\r\n                break;\r\n            default://Strings\r\n                if (objA.StringValue < objB.StringValue)\r\n                    return -1 * direction;\r\n                if (objA.StringValue > objB.StringValue)\r\n                    return 1 * direction;\r\n                break;\r\n        }\r\n        // If execution reaches here they are equal, sort by next field\r\n        return SP.orderLibraryDataByFieldsRecursive(a, b, fields, idx + 1);\r\n    }\r\n\r\n    public static findFolderByPath(cacheFolders: Map<string, SPFolder>, fileRef: string): SPFolder {\r\n        if (fileRef) {\r\n            let fileRefLower: string = fileRef.toLowerCase();\r\n            for (let value of cacheFolders.values()) {\r\n                if (value.ServerRelativeUrl && value.ServerRelativeUrl.toLowerCase() === fileRefLower) {\r\n                    return value;\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * From folder obtain path structure.\r\n     * <library name>/<sub folder>/<current path>\r\n     * @param folder\r\n     * @param currentPath \r\n     */\r\n    public static getFolderPath(folder: SPFolder, currentPath: string): string {\r\n        return folder ? SP.getFolderPath(folder.ParentFolder, folder.Name + \"/\" + currentPath) : currentPath;\r\n    }\r\n\r\n    /**\r\n     * From folder obtain path structure. Omit parent library in path.\r\n     * <sub folder>/<current path>\r\n     * @param folder \r\n     * @param currentPath \r\n     */\r\n    public static getFolderPathWithoutParent(folder: SPFolder, currentPath: string): string {\r\n        let path: string = this.getFolderPath(folder, currentPath);\r\n        if (path.indexOf('/') !== -1) {\r\n            path = path.substring(path.indexOf('/') + 1);   //Remove first path and leading slash\r\n            if (path.indexOf('/') === -1) {\r\n                path = \"/\" + path;  //Add forward slash if path was root without folders and was removed in previous step\r\n            }\r\n        }\r\n        return path;\r\n    }\r\n\r\n    /**\r\n     * Get maximum folder depth level\r\n     */\r\n    public static getFolderDepthLevel(items: SPListItem[]): number {\r\n        let levels: number[] = items\r\n            .filter(i => i.Folder !== null && i.Folder.Level !== null)\r\n            .map(i => i.Folder.Level);\r\n        return levels.length ? Math.max(...levels) : 0;\r\n    }\r\n\r\n    private static literalYes = Constants.getLiteral(\"generalSi\");\r\n    private static literalNo = Constants.getLiteral(\"generalNo\");\r\n\r\n    public static parseItemJsonResult(i: any, field: SPField): SPData {\r\n        let spd: SPData = new SPData(field.InternalName, \"\", field.Type);\r\n        try {\r\n            let odataInternalName: string = SP.safeOdataField(field.InternalName);\r\n\r\n            if (i[odataInternalName] !== null && i[odataInternalName] !== undefined) {\r\n                switch (field.Type) {\r\n                    case 7:     //Lookup\r\n                        spd.StringValue = i[odataInternalName][SP.safeOdataField(field.LookupField)];\r\n                        spd.LookupId = i[odataInternalName][\"ID\"];\r\n                        break;\r\n                    case 20:    //User\r\n                        spd.StringValue = i[odataInternalName][\"EMail\"];\r\n                        break;\r\n                    case 8:     //Yes/No\r\n                        spd.StringValue = i[odataInternalName] ? SP.literalYes : SP.literalNo;\r\n                        break;\r\n                    default:\r\n                        spd.StringValue = i[odataInternalName] + \"\";\r\n                        break;\r\n                }\r\n            }\r\n        } catch {\r\n            LogAx.trace(\"Error parsing column '\" + field.InternalName + \"' on item id:\" + i.ID);\r\n        }\r\n        return spd;\r\n    }\r\n\r\n    /**\r\n     * Apply OData renaming to fields with special characters. Just necessary in Rest queries and results\r\n     * @param field \r\n     */\r\n    public static safeOdataField(field: string) {\r\n        return (!!field && field.startsWith(\"_x\")) ? \"OData_\" + field : field;\r\n    }\r\n\r\n    /**\r\n     * Adapt display values to SharePoint accepted input values \r\n     * @param stringValue \r\n     * @param type \r\n     * @description Sometimes SharePoint doesn't accept its own values, so they must be converted, like boolean from \"Yes\"->\"true\"/\"No\"->\"false\",\r\n     * or Lookup values use IDs\r\n     */\r\n    public static assignPostValue(data: SPData): string | boolean | number {\r\n        switch (data.Type) {\r\n            case 8:     //Boolean\r\n                return (data.StringValue.toLowerCase() === \"no\") ? false : true;\r\n            case 7:     //Lookup\r\n                return data.LookupId;\r\n            default:\r\n                return data.StringValue;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Determine Permission based on EffectiveBasePermissions result from REST\r\n     * Stripped and adapted from actual SP.JS code\r\n     * @param high Result \"High\" from EffectiveBasePermissions query\r\n     * @param low Result \"Low\" from EffectiveBasePermissions query\r\n     * @param permission Permission mask to check \r\n     */\r\n    public static checkEffectivePermission(high: number, low: number, permission: PermissionKind): boolean {\r\n        if (!permission) {\r\n            return true;\r\n        }\r\n        var $v_0 = permission - 1;\r\n        var $v_1 = 1;\r\n        if ($v_0 >= 0 && $v_0 < 32) {\r\n            $v_1 = $v_1 << $v_0;\r\n            return 0 !== (low & $v_1);\r\n        }\r\n        if ($v_0 >= 32 && $v_0 < 64) {\r\n            $v_1 = $v_1 << ($v_0 - 32);\r\n            return 0 !== (high & $v_1);\r\n        }\r\n        return false;\r\n    }\r\n}\r\n","export class Constants {\r\n    static ES: any = {\r\n        analisysError: \"Se han encontrado incompatibilidades. Seguir con la copia puede producir inconsistencias.\",\r\n        analisysErrorInternalName: \"[Error] Nombre interno no encontrado: %1\",\r\n        analisysErrorInternalNameAndType: \"[Advertencia] Campo '%1' no tiene el mismo tipo de dato\",\r\n        analisysErrorRequired: \"[Error] Campo '%1' es requerido en destino\",\r\n        directory: \"Directorio SharePoint\",\r\n        directoryGroups: \"Grupos asignados\",\r\n        directoryNoGroups: \"No asignado a ningún grupo\",\r\n        directoryPermissionsSite: \"Permisos del sitio\",\r\n        directorySearchPlaceholder: \"Email, nombre completo o parcial\",\r\n        directorySearchResults: \"Resultados de la búsqueda\",\r\n        directorySearchUser: \"Usuario\",\r\n        directoryTableWebColumn: \"Web\",\r\n        directoryTableListColumn: \"Lista\",\r\n        directoryTableItemColumn: \"Elemento\",\r\n        directoryTableReadColumn: \"Leer\",\r\n        directoryTableWriteColumn: \"Escribir\",\r\n        directoryTableDeleteColumn: \"Borrar\",\r\n        directoryTitleFiltro: \"Búsqueda\",\r\n        directoryTitlePermissions: \"Permisos\",\r\n        explorerBibliotecaTitulo: \"Biblioteca\",\r\n        explorerBibliotecaInternal: \"Nombre interno\",\r\n        explorerBibliotecaEntityType: \"Nombre entidad\",\r\n        explorerBibliotecas: \"Bibliotecas\",\r\n        explorerCargando: \"Cargando\",\r\n        explorerListas: \"Listas\",\r\n        explorerNoRows: \"Lista vacía\",\r\n        explorerSubsitios: \"Sub-Sitios\",\r\n        explorerSubsitiosEstructura: \"Mostrar estructura\",\r\n        explorerHelp: \"Seleccione un recurso del menú lateral\",\r\n        explorerMenuBotonCopiar: \"Copiar\",\r\n        explorerMenuBotonDescargar: \"Descargar\",\r\n        explorerMenuBotonEliminar: \"Eliminar\",\r\n        explorerMenuBotonPegar: \"Pegar\",\r\n        explorerMenuBotonPegarFolder: \"Pegar en carpeta\",\r\n        explorerMenuBotonRefrescar: \"Refrescar\",\r\n        explorerMenuBotonSubirCSV: \"Importar CSV\",\r\n        explorerMenuDesplegableVista: \"Vista\",\r\n        explorerModalComprimir: \"Compresión de archivo\",\r\n        explorerModalCopyTitle: \"Copiar y Pegar\",\r\n        explorerModalCopyMessage: \"Copiando archivo {%1} / {%2} ({%3} Errores)\",\r\n        explorerModalCopyMessageList: \"Copiando ítem {%1} / {%2} ({%3} Errores)\",\r\n        explorerModalCopyMessageFinished: \"Copia finalizada {%1} / {%2} ({%3} Errores)\",\r\n        explorerModalCopyMessageAnalysing: \"Analizando lista destino...\",\r\n        explorerModalCopyMessageConfirm: \"ADVERTENCIA: Se va a pegar el contenido seleccionado creando las carpetas y sobreescribiendo archivos existentes. ¿Aceptar y continuar?\",\r\n        explorerModalCopyMessageConfirmList: \"ADVERTENCIA: Se va a pegar el contenido seleccionado en esta lista. ¿Aceptar y continuar?\",\r\n        explorerModalCopyMessageFolderConfirm: \"ADVERTENCIA: Se va a pegar el contenido seleccionado ignorando la estructura de carpetas y sobreescribiendo archivos existentes en la carpeta seleccionada. ¿Aceptar y continuar?\",\r\n        explorerModalDeleteTitle: \"Eliminación\",\r\n        explorerModalDeleteMessage: \"Eliminando archivo {%1} / {%2} ({%3} Errores)\",\r\n        explorerModalDeleteMessageList: \"Eliminando ítem {%1} / {%2} ({%3} Errores)\",\r\n        explorerModalDeleteMessageFinished: \"Eliminación finalizada {%1} / {%2} ({%3} Errores)\",\r\n        explorerModalDeleteMessageConfirm: \"ADVERTENCIA: Se va a eliminar el contenido seleccionado. ¿Aceptar y continuar?\",\r\n        explorerModalDescargar: \"Descarga de archivo\",\r\n        explorerModalDescargarErrores: \"Errores de descarga\",\r\n        explorerModalDescargarTitulo: \"Descargando archivos\",\r\n        explorerModalDescargarCompletado: \"Descargado\",\r\n        explorerModalExcelTitle: \"Descargar hoja Excel\",\r\n        explorerModalExcelMessage: \"Todas las filas seleccionadas de la vista actual se descargarán como un fichero separado por coma (csv), compatible con Excel.\",\r\n        explorerModalExcelMessage2: \"Para una correcta compatiblidad con Excel, debe seleccionar el carácter separador correcto para el idioma de tu sistema.\",\r\n        explorerModalExcelMessage3: \"Separador\",\r\n        explorerModalExcelOption1: \"Coma (,)\",\r\n        explorerModalExcelOption2: \"Punto y Coma (;)\",\r\n        explorerModalImportExcelTitle: \"Importar hoja Excel\",\r\n        explorerModalImportExcelMessage: \"Seleccionar el archivo CSV que se desea importar en esta lista.\",\r\n        explorerModalImportExcelMessage2: \"Para una correcta carga, debe seleccionar el carácter separador utilizado en el archivo.\",\r\n        explorerModalImportExcelMessage3: \"Comenzar la importación de datos en SharePoint.\",\r\n        explorerModalImportExcelMessage4: \"La información leída del fichero será importada en la lista.\",\r\n        explorerModalImportExcelMessageErrorsFound: \"¡Atención! Errores encontrados. Pueden causar corrupción en la información. Se recomienda corregir estas incidencias antes de continuar.\",\r\n        explorerModalImportExcelMessage5: \"Importando información a SharePoint.\",\r\n        explorerModalImportExcelMessage6: \"Esto puede tardar un momento. Puedes cancelar la operación en cualquier momento.\",\r\n        explorerModalImportExcelMessage7: \"Importación finalizada.\",\r\n        explorerModalImportExcelAnalyze: \"Cargar fichero\",\r\n        explorerModalImportExcelMessageProcessing: \"Procesando\",\r\n        explorerModalImportExcelMessageReading: \"Fichero leído\",\r\n        explorerModalImportExcelMessageUploading: \"Importado en la lista\",\r\n        explorerModalImportExcelError: \"Error de fichero\",\r\n        explorerModalImportExcelError01: \"No es del tipo esperado\",\r\n        libraryViewerCargando: \"Cargando bilblioteca\",\r\n        libraryViewerCargandoItems: \"Cargando datos de la biblioteca\",\r\n        libraryViewerCargarListaCompleta: \"Cargar lista completa\",\r\n        libraryViewerFolder: \"Carpeta\",\r\n        libraryViewerItemsCargados: \"Items cargados\",\r\n        libraryViewerTotalItems: \"Items en total\",\r\n        menuAccesoDenegado: \"Access Denied\",\r\n        menuAnalizandoSitio: \"Analizando Sitio\",\r\n        menuConectado: \"Conectado\",\r\n        menuDirectory: \"Directorio\",\r\n        menuExplorador: \"Explorador\",\r\n        menuLCID: \"LCID\",\r\n        menuNoSharePoint: \"Sin Conexión\",\r\n        menuTitulo: \"Título\",\r\n        menuVersion: \"Versión UI\",\r\n        webViewerCargando: \"Cargando web\",\r\n        webViewerDetailsUnauzorized: \"Web acceso no autorizado\",\r\n        webViewerDetailsExploreWeb: \"Explorar\",\r\n        webViewerDetailsLevelLimit: \"Alcanzado límite de 100 niveles de subsitio\",\r\n        generalCreado: \"Creado\",\r\n        generalDescripcion: \"Descripción\",\r\n        generalSitio: \"Sitio\",\r\n        generalBotonAceptar: \"Aceptar\",\r\n        generalBotonCerrar: \"Cerrar\",\r\n        generalBotonCancelar: \"Cancelar\",\r\n        generalBotonDescargar: \"Descargar\",\r\n        generalBotonCargar: \"Cargar\",\r\n        generalBotonImportar: \"Importar\",\r\n        generalCargando: \"Cargando...\",\r\n        generalTrue: \"Verdadero\",\r\n        generalFalse: \"Falso\",\r\n        generalSi: \"Sí\",\r\n        generalNo: \"No\",\r\n        generalNoData: \"No data\"\r\n    };\r\n    static EN: any = {\r\n        analisysError: \"Incompatibilities found. Proceed to copy may cause issues.\",\r\n        analisysErrorInternalName: \"[Error] Internal name not found: %1\",\r\n        analisysErrorInternalNameAndType: \"[Warning] The field '%1' is not the same data type\",\r\n        analisysErrorRequired: \"[Error] Field '%1' is required on target list\",\r\n        directory: \"SharePoint Directory\",\r\n        directoryGroups: \"Assigned groups\",\r\n        directoryNoGroups: \"Not assigned to any group\",\r\n        directoryPermissionsSite: \"Site permissions\",\r\n        directorySearchPlaceholder: \"Email, full or partial name\",\r\n        directorySearchResults: \"Search results\",\r\n        directorySearchUser: \"Usuario\",\r\n        directoryTableWebColumn: \"Web\",\r\n        directoryTableListColumn: \"List\",\r\n        directoryTableItemColumn: \"Item\",\r\n        directoryTableReadColumn: \"Read\",\r\n        directoryTableWriteColumn: \"Write\",\r\n        directoryTableDeleteColumn: \"Delete\",\r\n        directoryTitleFiltro: \"Search\",\r\n        directoryTitlePermissions: \"Permissions\",\r\n        explorerBibliotecaTitulo: \"Library\",\r\n        explorerBibliotecaInternal: \"Internal name\",\r\n        explorerBibliotecaEntityType: \"Full entity\",\r\n        explorerBibliotecas: \"Libraries\",\r\n        explorerCargando: \"Loading\",\r\n        explorerListas: \"Lists\",\r\n        explorerNoRows: \"Empty list\",\r\n        explorerSubsitios: \"Sub-Sites\",\r\n        explorerSubsitiosEstructura: \"Show structure\",\r\n        explorerHelp: \"Select a resource from the left panel\",\r\n        explorerMenuBotonCopiar: \"Copy\",\r\n        explorerMenuBotonDescargar: \"Download\",\r\n        explorerMenuBotonEliminar: \"Delete\",\r\n        explorerMenuBotonPegar: \"Paste\",\r\n        explorerMenuBotonPegarFolder: \"Paste in folder\",\r\n        explorerMenuBotonRefrescar: \"Refresh\",\r\n        explorerMenuBotonSubirCSV: \"Import CSV\",\r\n        explorerMenuDesplegableVista: \"View\",\r\n        explorerModalComprimir: \"Compressing file\",\r\n        explorerModalCopyTitle: \"Copy & Paste\",\r\n        explorerModalCopyMessage: \"Copying file {%1} / {%2} ({%3} Errors)\",\r\n        explorerModalCopyMessageList: \"Copying item {%1} / {%2} ({%3} Errors)\",\r\n        explorerModalCopyMessageFinished: \"Copy finished {%1} / {%2} ({%3} Errors)\",\r\n        explorerModalCopyMessageAnalysing: \"Analyzing target list...\",\r\n        explorerModalCopyMessageConfirm: \"WARNING: Selected content will be saved creating folders and overwriting existing files. Accept and continue?\",\r\n        explorerModalCopyMessageFolderConfirm: \"WARNING: Selected content will be saved ignoring folder structure and overwriting existing files in the selected folder. Accept and continue?\",\r\n        explorerModalDeleteTitle: \"Delete\",\r\n        explorerModalDeleteMessage: \"Deleting file {%1} / {%2} ({%3} Errors)\",\r\n        explorerModalDeleteMessageList: \"Deleting item {%1} / {%2} ({%3} Errors)\",\r\n        explorerModalDeleteMessageFinished: \"Delete finished {%1} / {%2} ({%3} Errors)\",\r\n        explorerModalDeleteMessageConfirm: \"WARNING: Selected content will be deleted. Accept and continue?\",\r\n        explorerModalDescargar: \"Downloading file\",\r\n        explorerModalDescargarErrores: \"Download Errors\",\r\n        explorerModalDescargarTitulo: \"Downloading files\",\r\n        explorerModalDescargarCompletado: \"Downloaded\",\r\n        explorerModalExcelTitle: \"Download Excel sheet\",\r\n        explorerModalExcelMessage: \"All selected rows in the current view will be downloaded as a comma-separated-value (csv) file compatible with Excel.\",\r\n        explorerModalExcelMessage2: \"To ensure compatibility, Excel requires you to use the proper delimiter for your systems language.\",\r\n        explorerModalExcelMessage3: \"Delimiter\",\r\n        explorerModalExcelOption1: \"Comma (,)\",\r\n        explorerModalExcelOption2: \"Semicolon (;)\",\r\n        explorerModalImportExcelTitle: \"Import Excel sheet\",\r\n        explorerModalImportExcelMessage: \"Select the CSV file you wish to import into this list.\",\r\n        explorerModalImportExcelMessage2: \"To ensure proper loading, we require you to specify the delimiter used in the file.\",\r\n        explorerModalImportExcelMessage3: \"Start uploading data to SharePoint.\",\r\n        explorerModalImportExcelMessage4: \"All data read from the file will be uploaded into the list.\",\r\n        explorerModalImportExcelMessageErrorsFound: \"Important! Please check these errors found. They could cause data corruption. It is recommended to fix these problems before continuing.\",\r\n        explorerModalImportExcelMessage5: \"Uploading data to SharePoint.\",\r\n        explorerModalImportExcelMessage6: \"This make take a while. You may cancel at any time.\",\r\n        explorerModalImportExcelMessage7: \"Import finished.\",\r\n        explorerModalImportExcelAnalyze: \"Read file\",\r\n        explorerModalImportExcelMessageProcessing: \"Processing\",\r\n        explorerModalImportExcelMessageReading: \"File read\",\r\n        explorerModalImportExcelMessageUploading: \"Uploaded to the list\",\r\n        explorerModalImportExcelError: \"File error\",\r\n        explorerModalImportExcelError01: \"Not of the type expected\",\r\n        libraryViewerCargando: \"Loading library\",\r\n        libraryViewerCargandoItems: \"Loading library data\",\r\n        libraryViewerCargarListaCompleta: \"Load full list\",\r\n        libraryViewerFolder: \"Folder\",\r\n        libraryViewerItemsCargados: \"Loaded Items\",\r\n        libraryViewerTotalItems: \"Total Items\",\r\n        menuAccesoDenegado: \"Acceso Denegado\",\r\n        menuAnalizandoSitio: \"Analyzing Site\",\r\n        menuConectado: \"Connected\",\r\n        menuDirectory: \"Directory\",\r\n        menuExplorador: \"Explorer\",\r\n        menuLCID: \"LCID\",\r\n        menuNoSharePoint: \"Not Connected\",\r\n        menuTitulo: \"Title\",\r\n        menuVersion: \"UI Version\",\r\n        webViewerCargando: \"Cargando web\",\r\n        webViewerDetailsUnauzorized: \"Web access not autorized\",\r\n        webViewerDetailsExploreWeb: \"Explore\",\r\n        webViewerDetailsLevelLimit: \"Subsite levels limited to 100\",\r\n        generalCreado: \"Created\",\r\n        generalDescripcion: \"Description\",\r\n        generalSitio: \"Site\",\r\n        generalBotonAceptar: \"Accept\",\r\n        generalBotonCerrar: \"Close\",\r\n        generalBotonCancelar: \"Cancel\",\r\n        generalBotonDescargar: \"Download\",\r\n        generalBotonCargar: \"Load\",\r\n        generalBotonImportar: \"Import\",\r\n        generalCargando: \"Loading...\",\r\n        generalTrue: \"True\",\r\n        generalFalse: \"False\",\r\n        generalSi: \"Yes\",\r\n        generalNo: \"No\",\r\n        generalNoData: \"No data\"\r\n    };\r\n\r\n    private static currentLCID: string = null;\r\n\r\n    public static getLiteral(id: string) {\r\n        let text: string;\r\n        if (this.currentLCID === null) {\r\n            this.currentLCID = Constants.getLCID();\r\n        }\r\n        if (this.currentLCID === \"es\") {\r\n            text = Constants.ES[id];\r\n        } else {\r\n            text = Constants.EN[id];\r\n        }\r\n        return (!text) ? id : text; //if undefined (doesn't exist) just throw out the id string, easier to spot than a blank space\r\n    }\r\n\r\n    public static getLCID(): string {\r\n        let lcid = browser.i18n.getUILanguage();\r\n        if (lcid.length > 2) {\r\n            lcid = lcid.substr(0, 2);\r\n        }\r\n        return lcid;\r\n    }\r\n\r\n}\r\n","export class Dates {\r\n    /**\r\n     * Get current time in format \"00:00:00.000\" used for log\r\n     */\r\n    public static getTimestampPrefix(): string {\r\n        let d = new Date();\r\n\r\n        let hours: string = (\"0\" + d.getHours()).slice(-2);\r\n        let minutes: string = (\"0\" + d.getMinutes()).slice(-2);\r\n        let seconds: string = (\"0\" + d.getSeconds()).slice(-2);\r\n        let miliseconds: string = (\"00\" + d.getMilliseconds()).slice(-3);\r\n\r\n        return hours + \":\" + minutes + \":\" + seconds + \".\" + miliseconds + \" \";\r\n    }\r\n\r\n    /**\r\n     * Get current time in format \"yyyy-mm-dd-hh-mm\" used for filenames\r\n     */\r\n    public static getFileSuffix(): string {\r\n        let d = new Date();\r\n\r\n        let month: string = (\"0\" + d.getMonth()).slice(-2);\r\n        let day: string = (\"0\" + d.getDate()).slice(-2);\r\n        let hours: string = (\"0\" + d.getHours()).slice(-2);\r\n        let minutes: string = (\"0\" + d.getMinutes()).slice(-2);\r\n\r\n        return d.getFullYear() + \"-\" + month + \"-\" + day + \"-\" + hours + \"-\" + minutes;\r\n    }\r\n}","import { Dates } from \"./spt.dates\";\r\n\r\nconst appName: string = \"SharePoint Toolbox\";\r\n\r\n/**\r\n * Logging helper class. Extend to write to file, database, etc.\r\n */\r\nexport class LogAx {\r\n    //Habilitar trazas informativas. TODO: pasar a configurable/automático\r\n    static readonly TRACE: boolean = true;\r\n    //Escribe traza verbose a consola y cualquier otro medio futuro\r\n    public static trace(txt: string): void {\r\n        if (LogAx.TRACE) {\r\n            //let t = LogAx.groupTexts[appName];\r\n            //LogAx.groupTexts[appName] = (!t) ? Dates.getTimestampPrefix() + txt : t + '\\n' + Dates.getTimestampPrefix() + txt;\r\n            console.log(\"<\" + appName + \">\" + \"[\" + Dates.getTimestampPrefix() + \"]: \" + txt);\r\n        }\r\n    }\r\n    //private static groupTexts: any = {};\r\n}\r\n","import * as React from \"react\";\r\nimport * as ReactDOM from \"react-dom\";\r\n\r\nimport { Menu } from \"./components/spt.menu\";\r\n\r\nReactDOM.render(\r\n    <Menu />, document.getElementById(\"spt.menu\")\r\n);","export class Strings {\r\n\r\n    public static readonly UTFBOMStartCode: string = \"\\ufeff\";\r\n\r\n    /**\r\n     * Obtains URL closest to the absolute URL\r\n     * @param url \r\n     */\r\n    public static getWebUrlFromAbsolute(url: string): string {\r\n        let u: string = url.toLowerCase().trim();\r\n        if (u.indexOf('?') !== -1) {\r\n            u = u.substring(0, u.indexOf('?'));\r\n        }\r\n        if (u.indexOf('/_layouts/') !== -1) {\r\n            u = u.substring(0, u.indexOf('/_layouts/'));\r\n        }\r\n        if (u.indexOf('/forms/') !== -1) {\r\n            u = u.substring(0, u.indexOf('/forms/'));\r\n            u = u.substring(0, u.lastIndexOf('/'));\r\n        }\r\n        if (u.indexOf('/lists/') !== -1) {\r\n            u = u.substring(0, u.indexOf('/lists/'));\r\n        }\r\n        if (u.indexOf('/sitepages/') !== -1) {\r\n            u = u.substring(0, u.indexOf('/sitepages/'));\r\n        }\r\n        if (u.endsWith(\".aspx\")) {\r\n            u = u.substring(0, u.lastIndexOf('/'));\r\n        }\r\n        return u;\r\n    }\r\n\r\n    /**\r\n     * Returns url that always ends with forward slash\r\n     * @param url \r\n     */\r\n    public static safeURL(url: string) {\r\n        return url.endsWith(\"/\") ? url : url + \"/\";\r\n    }\r\n\r\n    /**\r\n     * Replace incompatible REST characters with OData equivalent\r\n     * @param txt \r\n     */\r\n    public static replaceSpecialCharacters(txt: string): string {\r\n        return encodeURI(txt)\r\n            .replace(/'/g, \"''\")\r\n            //.replace(/%/g, \"%25\")\r\n            .replace(/\\+/g, \"%2B\")\r\n            .replace(/\\//g, \"%2F\")\r\n            .replace(/\\?/g, \"%3F\")\r\n            .replace(/#/g, \"%23\")\r\n            .replace(/&/g, \"%26\")\r\n            .replace(/\\(/g, \"%28\")\r\n            .replace(/\\)/g, \"%29\");\r\n    }\r\n\r\n    /**\r\n     * Retrieve query string key pairs\r\n     * @param queryString \r\n     */\r\n    public static parseQueryString(): { [key: string]: string } {\r\n        let returnValues: { [key: string]: string } = {};\r\n        let queries = window.location.search.substring(1).split(\"&\");\r\n        for (let query of queries) {\r\n            let queryPair = query.split(\"=\", 2);\r\n            let queryKey = decodeURIComponent(queryPair[0]);\r\n            let queryValue = decodeURIComponent(queryPair.length === 2 ? queryPair[1] : \"\");\r\n            returnValues[queryKey] = queryValue;\r\n        }\r\n        return returnValues;\r\n    }\r\n\r\n    /**\r\n     * Convert bytes to the closest metric by size. Fixed to first decimal value.\r\n     * 5 -> 5.0B\r\n     * 2.300 -> 2.3KB\r\n     * 1.841.231 -> 1.8MB\r\n     * @param bytes \r\n     */\r\n    public static closestByteMetric(bytes: number): string {\r\n        let sizes = ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\r\n\r\n        if (!bytes) {\r\n            return \"0\" + sizes[0];\r\n        }\r\n        let order: number = Math.min(sizes.length, Math.floor(Math.log(bytes) / Math.log(1024)));\r\n\r\n        return (bytes / Math.pow(1024, order)).toFixed(1) + sizes[order];\r\n    }\r\n\r\n    /**\r\n     * Convert Base64 from a UTF+BOM source with special characters\r\n     * @param str \r\n     * @author https://stackoverflow.com/questions/30106476/using-javascripts-atob-to-decode-base64-doesnt-properly-decode-utf-8-strings\r\n     */\r\n    public static b64DecodeUnicode(base64Data: string) {\r\n        // Going backwards: from bytestream, to percent-encoding, to original string.\r\n        let decodedText: string = decodeURIComponent(atob(base64Data).split('').map((c) => {\r\n            return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\r\n        }).join(''));\r\n        if (decodedText.startsWith(Strings.UTFBOMStartCode)) {\r\n            decodedText = decodedText.substring(Strings.UTFBOMStartCode.length);\r\n        }\r\n        return decodedText;\r\n    }\r\n}","module.exports = React;","module.exports = ReactDOM;"],"sourceRoot":""}